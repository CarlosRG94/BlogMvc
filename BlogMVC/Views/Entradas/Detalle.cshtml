@using BlogMVC.Servicios
@using BlogMVC.Utilidades
@model EntradaDetalleViewModel

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = Model.Titulo;
    var fechaPublicacionConFormato = Model.FechaPublicacion.ToString("dd MMM, yyyy");
    var urlRetorno = Context.ObtenerUrlRetorno();
}

<div class="container my-5 position-relative">
    <div class="d-flex flex-wrap justify-content-between align-items-start mb-4 gap-2">
    <div class="flex-grow-1">
        <h2 class="fw-bold mb-1">@Model.Titulo</h2>
        <p class="text-muted mb-0">@Model.EscritoPor | @fechaPublicacionConFormato</p>
    </div>

    @if (Model.MostrarBotonEdicion)
    {
        <div class="d-flex flex-column flex-sm-row gap-2">
            <a class="btn btn-sm btn-primary btn-accion" asp-action="Editar" asp-route-id="@Model.Id">
                <i class="bi bi-pencil"></i> Editar
            </a>
            <form asp-action="Borrar" class="m-0 p-0">
                <input type="hidden" name="Id" value="@Model.Id" />
                @if(Model.EntradaBorrada){
                    <button class="btn btn-sm btn-secondary btn-accion" asp-action="Borrar"
                            asp-route-borrado="false"><i class="bi bi-arrow-counterclockwise"></i> Restaurar</button>
                } else {
                    <button class="btn btn-sm btn-danger btn-accion" asp-action="Borrar"
                            asp-route-borrado="true"><i class="bi bi-trash"></i> Borrar</button>
                }
            </form>
        </div>
     }
    </div>

    <div class="detalle-contenido">
    @if (!string.IsNullOrEmpty(Model.PortadaUrl))
    {
        <img alt="portada" src="@Model.PortadaUrl" class="img-fluid portada mb-4 rounded shadow-sm" />
    }
    <div id="contenido" class="bg-white p-4 rounded shadow-sm"></div>
    </div>

    <hr />

    @if (Model.Comentarios.Any())
    {
        <h3 class="fw-bold mb-3">💬 Comentarios</h3>
        <div class="mb-4">
            @foreach (var comentario in Model.Comentarios)
            {
                <div class="comentario">
                    <h6>@comentario.EscritoPor</h6>
                    <small class="text-muted">
                        @comentario.FechaPublicacion.ToString("dd MMM, yyyy 'a las' hh:mm tt")
                    </small>
                    <p class="mt-2">@comentario.Cuerpo</p>

                    @if (comentario.MostrarBotonBorrar)
                    {
                        <div class="mt-2">
                            <a class="btn btn-sm btn-danger"
                               asp-action="borrar"
                               asp-controller="comentarios"
                               asp-route-id="@comentario.Id">
                                <i class="bi bi-trash"></i> Borrar comentario
                            </a>
                        </div>
                    }
                </div>
            }
        </div>
    }

    <h3 class="fw-bold mb-3">✍️ Deja un comentario</h3>

    @if (User.Identity!.IsAuthenticated)
    {
        <form asp-action="comentar" asp-controller="comentarios" class="mb-5">
            <input type="hidden" asp-for="Id" />
            <div style="max-width: 600px">
                <textarea id="cuerpo" name="cuerpo" required class="form-control"
                          placeholder="Escribe un comentario..."></textarea>
                <div class="d-flex justify-content-end mt-2">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-send"></i> Comentar
                    </button>
                </div>
            </div>
        </form>
    }
    else
    {
        <p class="text-muted">
            Inicia sesión para comentar 👉 
            <a asp-controller="usuarios" asp-action="login" asp-route-urlRetorno="@urlRetorno">
                Iniciar sesión
            </a>
        </p>
    }
</div>

<input type="hidden" id="cuerpoDelta" name="cuerpoDelta" value="@Model.Cuerpo"/>

@section Scripts{
    <script type="module">
        import {QuillDeltaToHtmlConverter} from "https://cdn.jsdelivr.net/npm/quill-delta-to-html/+esm";

                const deltaString = $("#cuerpoDelta").val();
                const delta = JSON.parse(deltaString);
                const converter = new QuillDeltaToHtmlConverter(delta);

                const contenido = document.getElementById("contenido");
                contenido.innerHTML = converter.convert();

                document.querySelectorAll('pre').forEach(el => {
                    hljs.highlightElement(el);
                });

                function ajustarAncho(){
                    const imagen = document.querySelector("img.img-fluid");
                    const contenido = document.getElementById("contenido");

                    if(imagen && contenido){
                        // ancho del contenedor por defecto
                        let anchoContenedor = imagen.clientWidth;

                        // si la imagen es muy pequeña (<400px), ampliamos su ancho y ajustamos contenido
                        if(anchoContenedor < 400){
                            anchoContenedor = 400; // ancho mínimo
                            imagen.style.width = anchoContenedor + "px";
                }

        contenido.style.width = anchoContenedor + "px";
    }
}

                window.addEventListener("load", ajustarAncho);
                window.addEventListener("resize", ajustarAncho);
    </script>
}
